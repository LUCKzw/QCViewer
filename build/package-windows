#!/bin/bash
# This script packages the Windows build of QCViewer into a
# self-contained zip file.

# The directory containing binary dependencies for QCViewer.
BINDEPS=/home/aparent/QCViewer-Deps/qcdist

function die {
  u=$?
  echo "$@" >&2
  exit $?
}

function assert_exe {
  which $1 >/dev/null 2>&1
}

assert_exe zip || die "No zip executable."

# Assume we are in the build directory.

ver=`git describe --tags --abbrev=0`
destname="QCViewer-${ver}-`date +%Y-%m-%d`"
workdir=`mktemp -d`
[ -d "$workdir" ] || die "Couldn't create a temporary directory."

mkdir "$workdir/QCViewer-$ver"

# Copy documentation
mkdir "$workdir/QCViewer-$ver/docs"
for i in `find ../docs -name '*.tex'`; do
  cp `dirname "$i"`/`basename "$i" .tex`.pdf "$workdir/QCViewer-$ver/docs/`basename "$i" .tex`.pdf" > /dev/null 2>&1
done

cp -r $BINDEPS/*  "$workdir/QCViewer-$ver"/ || die "Couldn't copy dependencies!"
cp -r ../bin/* "$workdir/QCViewer-$ver"/ || die "Couldn't copy QCViewer binaries!"
#mv "$workdir/QCViewer-$ver/"*.exe "$workdir/QCViewer-$ver/" || die "Couldn't move QCViewer binaries into bin!"

# Remove non-Windows executables, if they exist.
# Also remove qcimage as it does not need to be packaged with the windows build
rm -f "$workdir/QCViewer-$ver"/{qcviewer,qcimage,qcimage.exe}

mkdir -p packages || die "Couldn't create packages directory!"
destarc="`realpath packages`/${destname}.zip"

# Replace an existing archive.
rm -f "$destarc"

( cd "$workdir" && zip -qr "$destarc" "QCViewer-$ver" ) || die "Couldn't create archive!"

# Clean up.
rm -fr "$workdir"
exit 0
